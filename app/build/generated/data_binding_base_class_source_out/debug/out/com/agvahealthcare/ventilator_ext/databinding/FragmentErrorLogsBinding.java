// Generated by view binder compiler. Do not edit!
package com.agvahealthcare.ventilator_ext.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agvahealthcare.ventilator_ext.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentErrorLogsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton bottomButtonAlarm;

  @NonNull
  public final LinearLayoutCompat btnLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewAlarm;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final LinearLayout seekbarLayout;

  @NonNull
  public final Spinner spinnerAlarm;

  @NonNull
  public final LinearLayoutCompat staticLayoutAlarm;

  @NonNull
  public final AppCompatTextView textEndAlarmDate;

  @NonNull
  public final AppCompatTextView textStartAlarmDate;

  @NonNull
  public final AppCompatTextView textStartAlarmtime;

  @NonNull
  public final AppCompatTextView textViewAlarmType;

  @NonNull
  public final AppCompatTextView textViewUHID;

  @NonNull
  public final Button textcolorpriority;

  @NonNull
  public final ImageButton topButtonAlarm;

  @NonNull
  public final AppCompatTextView tvEmptyAlarm;

  @NonNull
  public final LinearLayoutCompat tvNote;

  @NonNull
  public final TextView tvheading;

  private FragmentErrorLogsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton bottomButtonAlarm, @NonNull LinearLayoutCompat btnLayout,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView recyclerViewAlarm,
      @NonNull SeekBar seekBar, @NonNull LinearLayout seekbarLayout, @NonNull Spinner spinnerAlarm,
      @NonNull LinearLayoutCompat staticLayoutAlarm, @NonNull AppCompatTextView textEndAlarmDate,
      @NonNull AppCompatTextView textStartAlarmDate, @NonNull AppCompatTextView textStartAlarmtime,
      @NonNull AppCompatTextView textViewAlarmType, @NonNull AppCompatTextView textViewUHID,
      @NonNull Button textcolorpriority, @NonNull ImageButton topButtonAlarm,
      @NonNull AppCompatTextView tvEmptyAlarm, @NonNull LinearLayoutCompat tvNote,
      @NonNull TextView tvheading) {
    this.rootView = rootView;
    this.bottomButtonAlarm = bottomButtonAlarm;
    this.btnLayout = btnLayout;
    this.progressBar = progressBar;
    this.recyclerViewAlarm = recyclerViewAlarm;
    this.seekBar = seekBar;
    this.seekbarLayout = seekbarLayout;
    this.spinnerAlarm = spinnerAlarm;
    this.staticLayoutAlarm = staticLayoutAlarm;
    this.textEndAlarmDate = textEndAlarmDate;
    this.textStartAlarmDate = textStartAlarmDate;
    this.textStartAlarmtime = textStartAlarmtime;
    this.textViewAlarmType = textViewAlarmType;
    this.textViewUHID = textViewUHID;
    this.textcolorpriority = textcolorpriority;
    this.topButtonAlarm = topButtonAlarm;
    this.tvEmptyAlarm = tvEmptyAlarm;
    this.tvNote = tvNote;
    this.tvheading = tvheading;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentErrorLogsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentErrorLogsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_error_logs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentErrorLogsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomButtonAlarm;
      ImageButton bottomButtonAlarm = ViewBindings.findChildViewById(rootView, id);
      if (bottomButtonAlarm == null) {
        break missingId;
      }

      id = R.id.btnLayout;
      LinearLayoutCompat btnLayout = ViewBindings.findChildViewById(rootView, id);
      if (btnLayout == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewAlarm;
      RecyclerView recyclerViewAlarm = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAlarm == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.seekbarLayout;
      LinearLayout seekbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (seekbarLayout == null) {
        break missingId;
      }

      id = R.id.spinnerAlarm;
      Spinner spinnerAlarm = ViewBindings.findChildViewById(rootView, id);
      if (spinnerAlarm == null) {
        break missingId;
      }

      id = R.id.staticLayoutAlarm;
      LinearLayoutCompat staticLayoutAlarm = ViewBindings.findChildViewById(rootView, id);
      if (staticLayoutAlarm == null) {
        break missingId;
      }

      id = R.id.textEndAlarmDate;
      AppCompatTextView textEndAlarmDate = ViewBindings.findChildViewById(rootView, id);
      if (textEndAlarmDate == null) {
        break missingId;
      }

      id = R.id.textStartAlarmDate;
      AppCompatTextView textStartAlarmDate = ViewBindings.findChildViewById(rootView, id);
      if (textStartAlarmDate == null) {
        break missingId;
      }

      id = R.id.textStartAlarmtime;
      AppCompatTextView textStartAlarmtime = ViewBindings.findChildViewById(rootView, id);
      if (textStartAlarmtime == null) {
        break missingId;
      }

      id = R.id.textViewAlarmType;
      AppCompatTextView textViewAlarmType = ViewBindings.findChildViewById(rootView, id);
      if (textViewAlarmType == null) {
        break missingId;
      }

      id = R.id.textViewUHID;
      AppCompatTextView textViewUHID = ViewBindings.findChildViewById(rootView, id);
      if (textViewUHID == null) {
        break missingId;
      }

      id = R.id.textcolorpriority;
      Button textcolorpriority = ViewBindings.findChildViewById(rootView, id);
      if (textcolorpriority == null) {
        break missingId;
      }

      id = R.id.topButtonAlarm;
      ImageButton topButtonAlarm = ViewBindings.findChildViewById(rootView, id);
      if (topButtonAlarm == null) {
        break missingId;
      }

      id = R.id.tv_emptyAlarm;
      AppCompatTextView tvEmptyAlarm = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptyAlarm == null) {
        break missingId;
      }

      id = R.id.tvNote;
      LinearLayoutCompat tvNote = ViewBindings.findChildViewById(rootView, id);
      if (tvNote == null) {
        break missingId;
      }

      id = R.id.tvheading;
      TextView tvheading = ViewBindings.findChildViewById(rootView, id);
      if (tvheading == null) {
        break missingId;
      }

      return new FragmentErrorLogsBinding((ConstraintLayout) rootView, bottomButtonAlarm, btnLayout,
          progressBar, recyclerViewAlarm, seekBar, seekbarLayout, spinnerAlarm, staticLayoutAlarm,
          textEndAlarmDate, textStartAlarmDate, textStartAlarmtime, textViewAlarmType, textViewUHID,
          textcolorpriority, topButtonAlarm, tvEmptyAlarm, tvNote, tvheading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
