// Generated by view binder compiler. Do not edit!
package com.agvahealthcare.ventilator_ext.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agvahealthcare.ventilator_ext.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TwoTileDesignLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ccDownButtonLayout;

  @NonNull
  public final ConstraintLayout ccUpButtonLayout;

  @NonNull
  public final Guideline horizontalGuideLine;

  @NonNull
  public final ImageView imgDown;

  @NonNull
  public final ImageView imgUp;

  @NonNull
  public final TextView txtTitle;

  @NonNull
  public final TextView txtUnit;

  @NonNull
  public final TextView txtValue;

  @NonNull
  public final ConstraintLayout valueBodyClick;

  @NonNull
  public final Guideline verticalGuideLine;

  private TwoTileDesignLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout ccDownButtonLayout, @NonNull ConstraintLayout ccUpButtonLayout,
      @NonNull Guideline horizontalGuideLine, @NonNull ImageView imgDown, @NonNull ImageView imgUp,
      @NonNull TextView txtTitle, @NonNull TextView txtUnit, @NonNull TextView txtValue,
      @NonNull ConstraintLayout valueBodyClick, @NonNull Guideline verticalGuideLine) {
    this.rootView = rootView;
    this.ccDownButtonLayout = ccDownButtonLayout;
    this.ccUpButtonLayout = ccUpButtonLayout;
    this.horizontalGuideLine = horizontalGuideLine;
    this.imgDown = imgDown;
    this.imgUp = imgUp;
    this.txtTitle = txtTitle;
    this.txtUnit = txtUnit;
    this.txtValue = txtValue;
    this.valueBodyClick = valueBodyClick;
    this.verticalGuideLine = verticalGuideLine;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TwoTileDesignLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TwoTileDesignLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.two_tile_design_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TwoTileDesignLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ccDownButtonLayout;
      ConstraintLayout ccDownButtonLayout = ViewBindings.findChildViewById(rootView, id);
      if (ccDownButtonLayout == null) {
        break missingId;
      }

      id = R.id.ccUpButtonLayout;
      ConstraintLayout ccUpButtonLayout = ViewBindings.findChildViewById(rootView, id);
      if (ccUpButtonLayout == null) {
        break missingId;
      }

      id = R.id.horizontalGuideLine;
      Guideline horizontalGuideLine = ViewBindings.findChildViewById(rootView, id);
      if (horizontalGuideLine == null) {
        break missingId;
      }

      id = R.id.imgDown;
      ImageView imgDown = ViewBindings.findChildViewById(rootView, id);
      if (imgDown == null) {
        break missingId;
      }

      id = R.id.imgUp;
      ImageView imgUp = ViewBindings.findChildViewById(rootView, id);
      if (imgUp == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      id = R.id.txtUnit;
      TextView txtUnit = ViewBindings.findChildViewById(rootView, id);
      if (txtUnit == null) {
        break missingId;
      }

      id = R.id.txtValue;
      TextView txtValue = ViewBindings.findChildViewById(rootView, id);
      if (txtValue == null) {
        break missingId;
      }

      id = R.id.valueBodyClick;
      ConstraintLayout valueBodyClick = ViewBindings.findChildViewById(rootView, id);
      if (valueBodyClick == null) {
        break missingId;
      }

      id = R.id.verticalGuideLine;
      Guideline verticalGuideLine = ViewBindings.findChildViewById(rootView, id);
      if (verticalGuideLine == null) {
        break missingId;
      }

      return new TwoTileDesignLayoutBinding((ConstraintLayout) rootView, ccDownButtonLayout,
          ccUpButtonLayout, horizontalGuideLine, imgDown, imgUp, txtTitle, txtUnit, txtValue,
          valueBodyClick, verticalGuideLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
