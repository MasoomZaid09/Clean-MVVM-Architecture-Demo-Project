// Generated by view binder compiler. Do not edit!
package com.agvahealthcare.ventilator_ext.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agvahealthcare.ventilator_ext.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StandbyConfirmationLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout cancelStandby;

  @NonNull
  public final ConstraintLayout continueStandy;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final Guideline guidelineh1;

  @NonNull
  public final TextView txtCancel;

  @NonNull
  public final TextView txtContinue;

  @NonNull
  public final TextView txtMsg;

  private StandbyConfirmationLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout cancelStandby, @NonNull ConstraintLayout continueStandy,
      @NonNull Guideline guideline1, @NonNull Guideline guideline2, @NonNull Guideline guidelineh1,
      @NonNull TextView txtCancel, @NonNull TextView txtContinue, @NonNull TextView txtMsg) {
    this.rootView = rootView;
    this.cancelStandby = cancelStandby;
    this.continueStandy = continueStandy;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.guidelineh1 = guidelineh1;
    this.txtCancel = txtCancel;
    this.txtContinue = txtContinue;
    this.txtMsg = txtMsg;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StandbyConfirmationLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StandbyConfirmationLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.standby_confirmation_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StandbyConfirmationLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_standby;
      ConstraintLayout cancelStandby = ViewBindings.findChildViewById(rootView, id);
      if (cancelStandby == null) {
        break missingId;
      }

      id = R.id.continue_standy;
      ConstraintLayout continueStandy = ViewBindings.findChildViewById(rootView, id);
      if (continueStandy == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = ViewBindings.findChildViewById(rootView, id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.guidelineh1;
      Guideline guidelineh1 = ViewBindings.findChildViewById(rootView, id);
      if (guidelineh1 == null) {
        break missingId;
      }

      id = R.id.txtCancel;
      TextView txtCancel = ViewBindings.findChildViewById(rootView, id);
      if (txtCancel == null) {
        break missingId;
      }

      id = R.id.txtContinue;
      TextView txtContinue = ViewBindings.findChildViewById(rootView, id);
      if (txtContinue == null) {
        break missingId;
      }

      id = R.id.txtMsg;
      TextView txtMsg = ViewBindings.findChildViewById(rootView, id);
      if (txtMsg == null) {
        break missingId;
      }

      return new StandbyConfirmationLayoutBinding((ConstraintLayout) rootView, cancelStandby,
          continueStandy, guideline1, guideline2, guidelineh1, txtCancel, txtContinue, txtMsg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
