// Generated by view binder compiler. Do not edit!
package com.agvahealthcare.ventilator_ext.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.agvahealthcare.ventilator_ext.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guidelineSettingsV1;

  @NonNull
  public final Guideline guidelineSettingsV2;

  @NonNull
  public final AppCompatTextView textViewBatteryRemaining;

  @NonNull
  public final AppCompatTextView textViewBatteryRemainingData;

  @NonNull
  public final AppCompatTextView textViewConnectionData;

  @NonNull
  public final AppCompatTextView textViewConnectionDataData;

  @NonNull
  public final AppCompatTextView textViewHardwareVersion;

  @NonNull
  public final AppCompatTextView textViewHardwareVersionData;

  @NonNull
  public final AppCompatTextView textViewLogId;

  @NonNull
  public final AppCompatTextView textViewLogIdData;

  @NonNull
  public final AppCompatTextView textViewModel;

  @NonNull
  public final AppCompatTextView textViewModelData;

  @NonNull
  public final AppCompatTextView textViewServiceHours;

  @NonNull
  public final AppCompatTextView textViewServiceHoursData;

  @NonNull
  public final AppCompatTextView textViewSoftwareVersion;

  @NonNull
  public final AppCompatTextView textViewSoftwareVersionData;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guidelineSettingsV1, @NonNull Guideline guidelineSettingsV2,
      @NonNull AppCompatTextView textViewBatteryRemaining,
      @NonNull AppCompatTextView textViewBatteryRemainingData,
      @NonNull AppCompatTextView textViewConnectionData,
      @NonNull AppCompatTextView textViewConnectionDataData,
      @NonNull AppCompatTextView textViewHardwareVersion,
      @NonNull AppCompatTextView textViewHardwareVersionData,
      @NonNull AppCompatTextView textViewLogId, @NonNull AppCompatTextView textViewLogIdData,
      @NonNull AppCompatTextView textViewModel, @NonNull AppCompatTextView textViewModelData,
      @NonNull AppCompatTextView textViewServiceHours,
      @NonNull AppCompatTextView textViewServiceHoursData,
      @NonNull AppCompatTextView textViewSoftwareVersion,
      @NonNull AppCompatTextView textViewSoftwareVersionData) {
    this.rootView = rootView;
    this.guidelineSettingsV1 = guidelineSettingsV1;
    this.guidelineSettingsV2 = guidelineSettingsV2;
    this.textViewBatteryRemaining = textViewBatteryRemaining;
    this.textViewBatteryRemainingData = textViewBatteryRemainingData;
    this.textViewConnectionData = textViewConnectionData;
    this.textViewConnectionDataData = textViewConnectionDataData;
    this.textViewHardwareVersion = textViewHardwareVersion;
    this.textViewHardwareVersionData = textViewHardwareVersionData;
    this.textViewLogId = textViewLogId;
    this.textViewLogIdData = textViewLogIdData;
    this.textViewModel = textViewModel;
    this.textViewModelData = textViewModelData;
    this.textViewServiceHours = textViewServiceHours;
    this.textViewServiceHoursData = textViewServiceHoursData;
    this.textViewSoftwareVersion = textViewSoftwareVersion;
    this.textViewSoftwareVersionData = textViewSoftwareVersionData;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guidelineSettingsV1;
      Guideline guidelineSettingsV1 = ViewBindings.findChildViewById(rootView, id);
      if (guidelineSettingsV1 == null) {
        break missingId;
      }

      id = R.id.guidelineSettingsV2;
      Guideline guidelineSettingsV2 = ViewBindings.findChildViewById(rootView, id);
      if (guidelineSettingsV2 == null) {
        break missingId;
      }

      id = R.id.textViewBatteryRemaining;
      AppCompatTextView textViewBatteryRemaining = ViewBindings.findChildViewById(rootView, id);
      if (textViewBatteryRemaining == null) {
        break missingId;
      }

      id = R.id.textViewBatteryRemainingData;
      AppCompatTextView textViewBatteryRemainingData = ViewBindings.findChildViewById(rootView, id);
      if (textViewBatteryRemainingData == null) {
        break missingId;
      }

      id = R.id.textViewConnectionData;
      AppCompatTextView textViewConnectionData = ViewBindings.findChildViewById(rootView, id);
      if (textViewConnectionData == null) {
        break missingId;
      }

      id = R.id.textViewConnectionDataData;
      AppCompatTextView textViewConnectionDataData = ViewBindings.findChildViewById(rootView, id);
      if (textViewConnectionDataData == null) {
        break missingId;
      }

      id = R.id.textViewHardwareVersion;
      AppCompatTextView textViewHardwareVersion = ViewBindings.findChildViewById(rootView, id);
      if (textViewHardwareVersion == null) {
        break missingId;
      }

      id = R.id.textViewHardwareVersionData;
      AppCompatTextView textViewHardwareVersionData = ViewBindings.findChildViewById(rootView, id);
      if (textViewHardwareVersionData == null) {
        break missingId;
      }

      id = R.id.textViewLogId;
      AppCompatTextView textViewLogId = ViewBindings.findChildViewById(rootView, id);
      if (textViewLogId == null) {
        break missingId;
      }

      id = R.id.textViewLogIdData;
      AppCompatTextView textViewLogIdData = ViewBindings.findChildViewById(rootView, id);
      if (textViewLogIdData == null) {
        break missingId;
      }

      id = R.id.textViewModel;
      AppCompatTextView textViewModel = ViewBindings.findChildViewById(rootView, id);
      if (textViewModel == null) {
        break missingId;
      }

      id = R.id.textViewModelData;
      AppCompatTextView textViewModelData = ViewBindings.findChildViewById(rootView, id);
      if (textViewModelData == null) {
        break missingId;
      }

      id = R.id.textViewServiceHours;
      AppCompatTextView textViewServiceHours = ViewBindings.findChildViewById(rootView, id);
      if (textViewServiceHours == null) {
        break missingId;
      }

      id = R.id.textViewServiceHoursData;
      AppCompatTextView textViewServiceHoursData = ViewBindings.findChildViewById(rootView, id);
      if (textViewServiceHoursData == null) {
        break missingId;
      }

      id = R.id.textViewSoftwareVersion;
      AppCompatTextView textViewSoftwareVersion = ViewBindings.findChildViewById(rootView, id);
      if (textViewSoftwareVersion == null) {
        break missingId;
      }

      id = R.id.textViewSoftwareVersionData;
      AppCompatTextView textViewSoftwareVersionData = ViewBindings.findChildViewById(rootView, id);
      if (textViewSoftwareVersionData == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, guidelineSettingsV1,
          guidelineSettingsV2, textViewBatteryRemaining, textViewBatteryRemainingData,
          textViewConnectionData, textViewConnectionDataData, textViewHardwareVersion,
          textViewHardwareVersionData, textViewLogId, textViewLogIdData, textViewModel,
          textViewModelData, textViewServiceHours, textViewServiceHoursData,
          textViewSoftwareVersion, textViewSoftwareVersionData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
